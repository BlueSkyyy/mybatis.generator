<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xbed.com.cn.dao.access.business.CheckinInfoMapper">
  <resultMap id="BaseResultMap" type="xbed.com.cn.dao.entity.business.CheckinInfo">
    <id column="checkin_info_id" jdbcType="INTEGER" property="checkinInfoId" />
    <result column="checkin" jdbcType="INTEGER" property="checkin" />
    <result column="checkin_id" jdbcType="INTEGER" property="checkinId" />
    <result column="checkin_time" jdbcType="TIMESTAMP" property="checkinTime" />
    <result column="checkout_time" jdbcType="TIMESTAMP" property="checkoutTime" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="open_pwd" jdbcType="VARCHAR" property="openPwd" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="ota_no" jdbcType="VARCHAR" property="otaNo" />
    <result column="ota_stay_id" jdbcType="VARCHAR" property="otaStayId" />
    <result column="overstay" jdbcType="INTEGER" property="overstay" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="stat" jdbcType="INTEGER" property="stat" />
    <result column="is_checkined" jdbcType="INTEGER" property="isCheckined" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="pay_batch" jdbcType="VARCHAR" property="payBatch" />
    <result column="pay_stat" jdbcType="INTEGER" property="payStat" />
    <result column="pay_notify" jdbcType="INTEGER" property="payNotify" />
    <result column="order_source" jdbcType="INTEGER" property="orderSource" />
    <result column="order_source_name" jdbcType="VARCHAR" property="orderSourceName" />
    <result column="settlement_id" jdbcType="INTEGER" property="settlementId" />
    <result column="pay_no" jdbcType="VARCHAR" property="payNo" />
    <result column="refund_id" jdbcType="INTEGER" property="refundId" />
    <result column="refund_no" jdbcType="VARCHAR" property="refundNo" />
    <result column="is_change" jdbcType="INTEGER" property="isChange" />
    <result column="pay_infos" jdbcType="VARCHAR" property="payInfos" />
    <result column="is_package" jdbcType="INTEGER" property="isPackage" />
    <result column="room_type_id" jdbcType="INTEGER" property="roomTypeId" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
  </resultMap>
  <sql id="Base_Column_List">
    checkin_info_id, checkin, checkin_id, checkin_time, checkout_time, created_at, open_pwd, 
    order_no, ota_no, ota_stay_id, overstay, remark, stat, is_checkined, updated_at, 
    pay_batch, pay_stat, pay_notify, order_source, order_source_name, settlement_id, 
    pay_no, refund_id, refund_no, is_change, pay_infos, is_package, room_type_id, end_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from xbed_business.checkin_infos
    where checkin_info_id = #{checkinInfoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from xbed_business.checkin_infos
    where checkin_info_id = #{checkinInfoId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="checkin_info_id" keyProperty="checkinInfoId" parameterType="xbed.com.cn.dao.entity.business.CheckinInfo" useGeneratedKeys="true">
    insert into xbed_business.checkin_infos (checkin, checkin_id, checkin_time, 
      checkout_time, created_at, open_pwd, 
      order_no, ota_no, ota_stay_id, 
      overstay, remark, stat, 
      is_checkined, updated_at, pay_batch, 
      pay_stat, pay_notify, order_source, 
      order_source_name, settlement_id, pay_no, 
      refund_id, refund_no, is_change, 
      pay_infos, is_package, room_type_id, 
      end_time)
    values (#{checkin,jdbcType=INTEGER}, #{checkinId,jdbcType=INTEGER}, #{checkinTime,jdbcType=TIMESTAMP}, 
      #{checkoutTime,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP}, #{openPwd,jdbcType=VARCHAR}, 
      #{orderNo,jdbcType=VARCHAR}, #{otaNo,jdbcType=VARCHAR}, #{otaStayId,jdbcType=VARCHAR}, 
      #{overstay,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{stat,jdbcType=INTEGER}, 
      #{isCheckined,jdbcType=INTEGER}, #{updatedAt,jdbcType=TIMESTAMP}, #{payBatch,jdbcType=VARCHAR}, 
      #{payStat,jdbcType=INTEGER}, #{payNotify,jdbcType=INTEGER}, #{orderSource,jdbcType=INTEGER}, 
      #{orderSourceName,jdbcType=VARCHAR}, #{settlementId,jdbcType=INTEGER}, #{payNo,jdbcType=VARCHAR}, 
      #{refundId,jdbcType=INTEGER}, #{refundNo,jdbcType=VARCHAR}, #{isChange,jdbcType=INTEGER}, 
      #{payInfos,jdbcType=VARCHAR}, #{isPackage,jdbcType=INTEGER}, #{roomTypeId,jdbcType=INTEGER}, 
      #{endTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="checkin_info_id" keyProperty="checkinInfoId" parameterType="xbed.com.cn.dao.entity.business.CheckinInfo" useGeneratedKeys="true">
    insert into xbed_business.checkin_infos
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="checkin != null">
        checkin,
      </if>
      <if test="checkinId != null">
        checkin_id,
      </if>
      <if test="checkinTime != null">
        checkin_time,
      </if>
      <if test="checkoutTime != null">
        checkout_time,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="openPwd != null">
        open_pwd,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="otaNo != null">
        ota_no,
      </if>
      <if test="otaStayId != null">
        ota_stay_id,
      </if>
      <if test="overstay != null">
        overstay,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="stat != null">
        stat,
      </if>
      <if test="isCheckined != null">
        is_checkined,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="payBatch != null">
        pay_batch,
      </if>
      <if test="payStat != null">
        pay_stat,
      </if>
      <if test="payNotify != null">
        pay_notify,
      </if>
      <if test="orderSource != null">
        order_source,
      </if>
      <if test="orderSourceName != null">
        order_source_name,
      </if>
      <if test="settlementId != null">
        settlement_id,
      </if>
      <if test="payNo != null">
        pay_no,
      </if>
      <if test="refundId != null">
        refund_id,
      </if>
      <if test="refundNo != null">
        refund_no,
      </if>
      <if test="isChange != null">
        is_change,
      </if>
      <if test="payInfos != null">
        pay_infos,
      </if>
      <if test="isPackage != null">
        is_package,
      </if>
      <if test="roomTypeId != null">
        room_type_id,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="checkin != null">
        #{checkin,jdbcType=INTEGER},
      </if>
      <if test="checkinId != null">
        #{checkinId,jdbcType=INTEGER},
      </if>
      <if test="checkinTime != null">
        #{checkinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkoutTime != null">
        #{checkoutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="openPwd != null">
        #{openPwd,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="otaNo != null">
        #{otaNo,jdbcType=VARCHAR},
      </if>
      <if test="otaStayId != null">
        #{otaStayId,jdbcType=VARCHAR},
      </if>
      <if test="overstay != null">
        #{overstay,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="stat != null">
        #{stat,jdbcType=INTEGER},
      </if>
      <if test="isCheckined != null">
        #{isCheckined,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="payBatch != null">
        #{payBatch,jdbcType=VARCHAR},
      </if>
      <if test="payStat != null">
        #{payStat,jdbcType=INTEGER},
      </if>
      <if test="payNotify != null">
        #{payNotify,jdbcType=INTEGER},
      </if>
      <if test="orderSource != null">
        #{orderSource,jdbcType=INTEGER},
      </if>
      <if test="orderSourceName != null">
        #{orderSourceName,jdbcType=VARCHAR},
      </if>
      <if test="settlementId != null">
        #{settlementId,jdbcType=INTEGER},
      </if>
      <if test="payNo != null">
        #{payNo,jdbcType=VARCHAR},
      </if>
      <if test="refundId != null">
        #{refundId,jdbcType=INTEGER},
      </if>
      <if test="refundNo != null">
        #{refundNo,jdbcType=VARCHAR},
      </if>
      <if test="isChange != null">
        #{isChange,jdbcType=INTEGER},
      </if>
      <if test="payInfos != null">
        #{payInfos,jdbcType=VARCHAR},
      </if>
      <if test="isPackage != null">
        #{isPackage,jdbcType=INTEGER},
      </if>
      <if test="roomTypeId != null">
        #{roomTypeId,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="xbed.com.cn.dao.entity.business.CheckinInfo">
    update xbed_business.checkin_infos
    <set>
      <if test="checkin != null">
        checkin = #{checkin,jdbcType=INTEGER},
      </if>
      <if test="checkinId != null">
        checkin_id = #{checkinId,jdbcType=INTEGER},
      </if>
      <if test="checkinTime != null">
        checkin_time = #{checkinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkoutTime != null">
        checkout_time = #{checkoutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="openPwd != null">
        open_pwd = #{openPwd,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="otaNo != null">
        ota_no = #{otaNo,jdbcType=VARCHAR},
      </if>
      <if test="otaStayId != null">
        ota_stay_id = #{otaStayId,jdbcType=VARCHAR},
      </if>
      <if test="overstay != null">
        overstay = #{overstay,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="stat != null">
        stat = #{stat,jdbcType=INTEGER},
      </if>
      <if test="isCheckined != null">
        is_checkined = #{isCheckined,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="payBatch != null">
        pay_batch = #{payBatch,jdbcType=VARCHAR},
      </if>
      <if test="payStat != null">
        pay_stat = #{payStat,jdbcType=INTEGER},
      </if>
      <if test="payNotify != null">
        pay_notify = #{payNotify,jdbcType=INTEGER},
      </if>
      <if test="orderSource != null">
        order_source = #{orderSource,jdbcType=INTEGER},
      </if>
      <if test="orderSourceName != null">
        order_source_name = #{orderSourceName,jdbcType=VARCHAR},
      </if>
      <if test="settlementId != null">
        settlement_id = #{settlementId,jdbcType=INTEGER},
      </if>
      <if test="payNo != null">
        pay_no = #{payNo,jdbcType=VARCHAR},
      </if>
      <if test="refundId != null">
        refund_id = #{refundId,jdbcType=INTEGER},
      </if>
      <if test="refundNo != null">
        refund_no = #{refundNo,jdbcType=VARCHAR},
      </if>
      <if test="isChange != null">
        is_change = #{isChange,jdbcType=INTEGER},
      </if>
      <if test="payInfos != null">
        pay_infos = #{payInfos,jdbcType=VARCHAR},
      </if>
      <if test="isPackage != null">
        is_package = #{isPackage,jdbcType=INTEGER},
      </if>
      <if test="roomTypeId != null">
        room_type_id = #{roomTypeId,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where checkin_info_id = #{checkinInfoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xbed.com.cn.dao.entity.business.CheckinInfo">
    update xbed_business.checkin_infos
    set checkin = #{checkin,jdbcType=INTEGER},
      checkin_id = #{checkinId,jdbcType=INTEGER},
      checkin_time = #{checkinTime,jdbcType=TIMESTAMP},
      checkout_time = #{checkoutTime,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      open_pwd = #{openPwd,jdbcType=VARCHAR},
      order_no = #{orderNo,jdbcType=VARCHAR},
      ota_no = #{otaNo,jdbcType=VARCHAR},
      ota_stay_id = #{otaStayId,jdbcType=VARCHAR},
      overstay = #{overstay,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      stat = #{stat,jdbcType=INTEGER},
      is_checkined = #{isCheckined,jdbcType=INTEGER},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      pay_batch = #{payBatch,jdbcType=VARCHAR},
      pay_stat = #{payStat,jdbcType=INTEGER},
      pay_notify = #{payNotify,jdbcType=INTEGER},
      order_source = #{orderSource,jdbcType=INTEGER},
      order_source_name = #{orderSourceName,jdbcType=VARCHAR},
      settlement_id = #{settlementId,jdbcType=INTEGER},
      pay_no = #{payNo,jdbcType=VARCHAR},
      refund_id = #{refundId,jdbcType=INTEGER},
      refund_no = #{refundNo,jdbcType=VARCHAR},
      is_change = #{isChange,jdbcType=INTEGER},
      pay_infos = #{payInfos,jdbcType=VARCHAR},
      is_package = #{isPackage,jdbcType=INTEGER},
      room_type_id = #{roomTypeId,jdbcType=INTEGER},
      end_time = #{endTime,jdbcType=TIMESTAMP}
    where checkin_info_id = #{checkinInfoId,jdbcType=INTEGER}
  </update>
  <update id="updateBySelectiveBatch">
    <foreach collection="list" index="index" item="item" separator=";">
      <if test="item.checkin_info_id != null">
        update xbed_business.checkin_infos
        <set>
          <if test="item.checkin != null">
            checkin = #{item.checkin,jdbcType=INTEGER},
          </if>
          <if test="item.checkinId != null">
            checkin_id = #{item.checkinId,jdbcType=INTEGER},
          </if>
          <if test="item.checkinTime != null">
            checkin_time = #{item.checkinTime,jdbcType=TIMESTAMP},
          </if>
          <if test="item.checkoutTime != null">
            checkout_time = #{item.checkoutTime,jdbcType=TIMESTAMP},
          </if>
          <if test="item.createdAt != null">
            created_at = #{item.createdAt,jdbcType=TIMESTAMP},
          </if>
          <if test="item.openPwd != null">
            open_pwd = #{item.openPwd,jdbcType=VARCHAR},
          </if>
          <if test="item.orderNo != null">
            order_no = #{item.orderNo,jdbcType=VARCHAR},
          </if>
          <if test="item.otaNo != null">
            ota_no = #{item.otaNo,jdbcType=VARCHAR},
          </if>
          <if test="item.otaStayId != null">
            ota_stay_id = #{item.otaStayId,jdbcType=VARCHAR},
          </if>
          <if test="item.overstay != null">
            overstay = #{item.overstay,jdbcType=INTEGER},
          </if>
          <if test="item.remark != null">
            remark = #{item.remark,jdbcType=VARCHAR},
          </if>
          <if test="item.stat != null">
            stat = #{item.stat,jdbcType=INTEGER},
          </if>
          <if test="item.isCheckined != null">
            is_checkined = #{item.isCheckined,jdbcType=INTEGER},
          </if>
          <if test="item.updatedAt != null">
            updated_at = #{item.updatedAt,jdbcType=TIMESTAMP},
          </if>
          <if test="item.payBatch != null">
            pay_batch = #{item.payBatch,jdbcType=VARCHAR},
          </if>
          <if test="item.payStat != null">
            pay_stat = #{item.payStat,jdbcType=INTEGER},
          </if>
          <if test="item.payNotify != null">
            pay_notify = #{item.payNotify,jdbcType=INTEGER},
          </if>
          <if test="item.orderSource != null">
            order_source = #{item.orderSource,jdbcType=INTEGER},
          </if>
          <if test="item.orderSourceName != null">
            order_source_name = #{item.orderSourceName,jdbcType=VARCHAR},
          </if>
          <if test="item.settlementId != null">
            settlement_id = #{item.settlementId,jdbcType=INTEGER},
          </if>
          <if test="item.payNo != null">
            pay_no = #{item.payNo,jdbcType=VARCHAR},
          </if>
          <if test="item.refundId != null">
            refund_id = #{item.refundId,jdbcType=INTEGER},
          </if>
          <if test="item.refundNo != null">
            refund_no = #{item.refundNo,jdbcType=VARCHAR},
          </if>
          <if test="item.isChange != null">
            is_change = #{item.isChange,jdbcType=INTEGER},
          </if>
          <if test="item.payInfos != null">
            pay_infos = #{item.payInfos,jdbcType=VARCHAR},
          </if>
          <if test="item.isPackage != null">
            is_package = #{item.isPackage,jdbcType=INTEGER},
          </if>
          <if test="item.roomTypeId != null">
            room_type_id = #{item.roomTypeId,jdbcType=INTEGER},
          </if>
          <if test="item.endTime != null">
            end_time = #{item.endTime,jdbcType=TIMESTAMP},
          </if>
        </set>
        where checkin_info_id = #{item.checkinInfoId,jdbcType=INTEGER}
      </if>
    </foreach>
  </update>
  <update id="updateBatch">
    <foreach collection="list" index="index" item="item" separator=";">
      <if test="item.checkin_info_id != null">
        update xbed_business.checkin_infos
        set checkin = #{item.checkin,jdbcType=INTEGER},
          checkin_id = #{item.checkinId,jdbcType=INTEGER},
          checkin_time = #{item.checkinTime,jdbcType=TIMESTAMP},
          checkout_time = #{item.checkoutTime,jdbcType=TIMESTAMP},
          created_at = #{item.createdAt,jdbcType=TIMESTAMP},
          open_pwd = #{item.openPwd,jdbcType=VARCHAR},
          order_no = #{item.orderNo,jdbcType=VARCHAR},
          ota_no = #{item.otaNo,jdbcType=VARCHAR},
          ota_stay_id = #{item.otaStayId,jdbcType=VARCHAR},
          overstay = #{item.overstay,jdbcType=INTEGER},
          remark = #{item.remark,jdbcType=VARCHAR},
          stat = #{item.stat,jdbcType=INTEGER},
          is_checkined = #{item.isCheckined,jdbcType=INTEGER},
          updated_at = #{item.updatedAt,jdbcType=TIMESTAMP},
          pay_batch = #{item.payBatch,jdbcType=VARCHAR},
          pay_stat = #{item.payStat,jdbcType=INTEGER},
          pay_notify = #{item.payNotify,jdbcType=INTEGER},
          order_source = #{item.orderSource,jdbcType=INTEGER},
          order_source_name = #{item.orderSourceName,jdbcType=VARCHAR},
          settlement_id = #{item.settlementId,jdbcType=INTEGER},
          pay_no = #{item.payNo,jdbcType=VARCHAR},
          refund_id = #{item.refundId,jdbcType=INTEGER},
          refund_no = #{item.refundNo,jdbcType=VARCHAR},
          is_change = #{item.isChange,jdbcType=INTEGER},
          pay_infos = #{item.payInfos,jdbcType=VARCHAR},
          is_package = #{item.isPackage,jdbcType=INTEGER},
          room_type_id = #{item.roomTypeId,jdbcType=INTEGER},
          end_time = #{item.endTime,jdbcType=TIMESTAMP}
        where checkin_info_id = #{item.checkinInfoId,jdbcType=INTEGER}
      </if>
    </foreach>
  </update>
  <insert id="insertBatch">
    insert into xbed_business.checkin_infos (checkin, checkin_id, checkin_time, checkout_time, 
    created_at, open_pwd, order_no, ota_no, ota_stay_id, 
    overstay, remark, stat, is_checkined, updated_at, 
    pay_batch, pay_stat, pay_notify, order_source, order_source_name, 
    settlement_id, pay_no, refund_id, refund_no, is_change, 
    pay_infos, is_package, room_type_id, end_time) values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.checkin,jdbcType=INTEGER}, #{item.checkinId,jdbcType=INTEGER}, #{item.checkinTime,jdbcType=TIMESTAMP}, #{item.checkoutTime,jdbcType=TIMESTAMP}, 
        #{item.createdAt,jdbcType=TIMESTAMP}, #{item.openPwd,jdbcType=VARCHAR}, #{item.orderNo,jdbcType=VARCHAR}, #{item.otaNo,jdbcType=VARCHAR}, #{item.otaStayId,jdbcType=VARCHAR}, 
        #{item.overstay,jdbcType=INTEGER}, #{item.remark,jdbcType=VARCHAR}, #{item.stat,jdbcType=INTEGER}, #{item.isCheckined,jdbcType=INTEGER}, #{item.updatedAt,jdbcType=TIMESTAMP}, 
        #{item.payBatch,jdbcType=VARCHAR}, #{item.payStat,jdbcType=INTEGER}, #{item.payNotify,jdbcType=INTEGER}, #{item.orderSource,jdbcType=INTEGER}, #{item.orderSourceName,jdbcType=VARCHAR}, 
        #{item.settlementId,jdbcType=INTEGER}, #{item.payNo,jdbcType=VARCHAR}, #{item.refundId,jdbcType=INTEGER}, #{item.refundNo,jdbcType=VARCHAR}, #{item.isChange,jdbcType=INTEGER}, 
        #{item.payInfos,jdbcType=VARCHAR}, #{item.isPackage,jdbcType=INTEGER}, #{item.roomTypeId,jdbcType=INTEGER}, #{item.endTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>



  <sql id="base_condition_sql">
    SELECT * FROM checkin_infos WHERE 1 = 1
    <if test="checkinId != null">
      AND checkin_id = #{checkinId}
    </if>
    <if test="payStat != null">
      AND pay_stat = #{payStat}
    </if>
    <if test="stat != null">
      AND stat = #{stat}
    </if>
    <if test="openPwd != null">
      AND open_pwd = #{openPwd}
    </if>
    <if test="checkin != null">
      AND checkin = #{checkin}
    </if>
    <if test="overstay != null">
      AND overstay = #{overstay}
    </if>
    <if test="checkinTime != null">
      AND checkin_time = #{checkinTime}
    </if>
    <if test="otaNo != null and otaNo != ''">
      AND ota_no = #{otaNo}
    </if>
    <if test="otaStayId != null and ota_stay_id != ''">
      AND ota_stay_id = #{otaStayId}
    </if>
    <if test="orderNo != null and orderNo != ''">
      AND order_no = #{orderNo}
    </if>
  </sql>

  <select id="queryByCondition" parameterType="map" resultMap="BaseResultMap">
    <include refid="base_condition_sql" /> ORDER BY checkin_info_id DESC
  </select>

  <select id="queryOrderByCheckoutTime" parameterType="map" resultMap="BaseResultMap">
    <include refid="base_condition_sql" />
    ORDER BY checkout_time ASC
  </select>

  <select id="queryOrderByCheckoutTimeDesc" parameterType="map" resultMap="BaseResultMap">
    <include refid="base_condition_sql" />
    ORDER BY checkout_time DESC
  </select>

  <select id="queryCheckinNotOrderByCheckoutTimeDesc" parameterType="map" resultMap="BaseResultMap">
    SELECT * FROM checkin_infos WHERE 1 = 1
    <if test="checkinId != null">
      AND checkin_id = #{checkinId}
    </if>
    <if test="payStat != null">
      AND pay_stat = #{payStat}
    </if>
    <if test="stat != null">
      AND stat = #{stat}
    </if>
    <if test="openPwd != null">
      AND open_pwd = #{openPwd}
    </if>
    <if test="checkin != null">
      AND checkin != #{checkin}
    </if>
    <if test="overstay != null">
      AND overstay = #{overstay}
    </if>
    ORDER BY checkout_time DESC
  </select>

  <select id="queryCreatedAtLessThan" parameterType="map" resultMap="BaseResultMap">
    SELECT * FROM checkin_infos WHERE 1 = 1
    <if test="checkinId != null">
      AND checkin_id = #{checkinId}
    </if>
    <if test="payStat != null">
      AND pay_stat = #{payStat}
    </if>
    <if test="stat != null">
      AND stat = #{stat}
    </if>
    <if test="openPwd != null">
      AND open_pwd = #{openPwd}
    </if>
    <if test="checkin != null">
      AND checkin = #{checkin}
    </if>
    <if test="overstay != null">
      AND overstay = #{overstay}
    </if>
    <if test="checkinTime != null">
      AND checkin_time = #{checkinTime}
    </if>
    <if test="otaNo != null and otaNo != ''">
      AND ota_no = #{otaNo}
    </if>
    <if test="otaStayId != null and ota_stay_id != ''">
      AND ota_stay_id = #{otaStayId}
    </if>
    <if test="createdAt != null">
      AND created_at &lt; #{createdAt}
    </if>
  </select>

  <select id="queryCreatedAtLessGreater" parameterType="map" resultMap="BaseResultMap">
    SELECT * FROM checkin_infos WHERE 1 = 1
    <if test="checkinId != null">
      AND checkin_id = #{checkinId}
    </if>
    <if test="payStat != null">
      AND pay_stat = #{payStat}
    </if>
    <if test="stat != null">
      AND stat = #{stat}
    </if>
    <if test="openPwd != null">
      AND open_pwd = #{openPwd}
    </if>
    <if test="checkin != null">
      AND checkin = #{checkin}
    </if>
    <if test="overstay != null">
      AND overstay = #{overstay}
    </if>
    <if test="checkinTime != null">
      AND checkin_time = #{checkinTime}
    </if>
    <if test="otaNo != null and otaNo != ''">
      AND ota_no = #{otaNo}
    </if>
    <if test="otaStayId != null and ota_stay_id != ''">
      AND ota_stay_id = #{otaStayId}
    </if>
    <if test="createdAtStart != null and createdAtEnd != null">
      AND created_at &lt; createdAtStart AND created_at &gt; createdAtEnd
    </if>
  </select>

  <select id="queryCheckinInfoBoByPage" parameterType="map" resultType="xbed.com.cn.bean.bo.CheckinInfoBo">
    SELECT * FROM checkin_infos LIMIT #{page}, #{size}
  </select>

  <select id="queryByOrderNoIn" parameterType="list" resultMap="BaseResultMap">
    SELECT * FROM checkin_infos WHERE order_no IN
    <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
      #{item}
    </foreach>
  </select>

  <select id="queryByCheckinIdIn" parameterType="map" resultMap="BaseResultMap">
    SELECT * FROM checkin_infos WHERE stat = #{stat} AND checkin_id IN
    <foreach collection="checkinIds" item="item" index="index" open="(" close=")" separator=",">
      #{item}
    </foreach>
  </select>

  <select id="findPayCheckinInfoRoomIds" parameterType="map" resultType="map">
    <![CDATA[SELECT b.room_id roomId, MAX(a.checkin_time) checkinTime FROM checkin_infos a, checkins b
    WHERE a.checkin_id = b.checkin_id AND a.checkin_time >= #{beginDate} AND a.checkin_time < #{endDate} AND a.pay_stat = 2 AND a.stat = 1 GROUP BY b.room_id
    ]]>
  </select>

  <select id="findOverstayOrder" resultMap="BaseResultMap">
    SELECT ci.* FROM checkin_infos ci, checkins c
    WHERE ci.stat = 1
    AND ci.pay_stat = 2 AND ci.overstay = 2
    AND ci.checkin != 3 AND DATE_FORMAT(ci.checkin_time, '%Y-%m-%d') = DATE_FORMAT(NOW(), '%Y-%m-%d')
    AND ci.checkin_id = c.checkin_id
    AND c.step = 2
  </select>

  <select id="findOverStayPass" resultType="map">
    SELECT a.open_pwd AS openPwd, b.phone
    FROM checkin_infos a, checkiners b
    WHERE a.checkin_id = b.checkin_id AND a.stat = 1
    AND a.pay_stat = 2 AND a.overstay = 2
    AND a.checkin != 3 AND a.open_pwd IS NOT NULL
    AND b.phone IS NOT NULL
    AND DATE_FORMAT(a.checkin_time, '%Y-%m-%d') = DATE_FORMAT(NOW(), '%Y-%m-%d')
    GROUP BY b.phone
  </select>

  <update id="updateCheckinForOverStay" parameterType="map">
    UPDATE checkin_infos SET checkin = 2
    WHERE checkin = 1 AND stat = 1 AND pay_stat = 2 AND overstay = 2 AND DATE_FORMAT(checkin_time, '%Y-%m-%d') = DATE_FORMAT(NOW(), '%Y-%m-%d')
  </update>

  <select id="findOverStayPassOwner" resultType="map">
    SELECT a.open_pwd openPwd, b.phone, r.cust_room_no custRoomNo, rc.chain_name chainName, r.room_type_name roomTypeName, c.order_no orderNo, c.checkin_id checkinId, a.checkin_info_id checkinInfoId, c.room_id roomId
    FROM checkin_infos a, checkiners b, checkins c,
    xbed_base.rooms r, xbed_base.room_chain rc
    WHERE a.checkin_id = b.checkin_id
    AND a.stat = 1
    AND a.pay_stat = 2
    AND a.overstay = 2
    AND a.open_pwd IS NOT NULL
    AND b.phone IS NOT NULL
    AND DATE_FORMAT(a.checkin_time, '%Y-%m-%d') = DATE_FORMAT(NOW(), '%Y-%m-%d')
    AND a.checkin_id=c.checkin_id
    AND c.room_id=r.room_id
    AND c.step=2
    AND r.chain_id=rc.chain_id
    GROUP BY a.checkin_info_id,b.phone
  </select>

  <update id="updateCheckinForOverStayOwner">
    UPDATE checkin_infos ci,
    checkins c
    SET ci.checkin = 2
    WHERE ci.checkin = 1
    AND ci.stat = 1
    AND ci.pay_stat = 2
    AND ci.overstay = 2
    AND DATE_FORMAT(ci.checkin_time, '%Y-%m-%d') = DATE_FORMAT(NOW(), '%Y-%m-%d')
    AND ci.checkin_id = c.checkin_id
    AND c.step = 2
  </update>

  <select id="listAllOrderListCount" parameterType="Map" resultType="Integer">
    SELECT COUNT(1) FROM (
    SELECT
    a.order_no, b.other_no, a.checkin_id, a.created_at,
    CONCAT(b. NAME, '(', b.phone, ')') orderName, d. NAME cname,
    b.source, a.pay_stat, a.checkin, a.stat,
    IF ( ISNULL(c.actual_checkin_time) OR a.overstay = 2, a.checkin_time, c.actual_checkin_time ) checkin_time,
    IF ( ISNULL(c.actual_checkout_time) OR a.overstay = 2, a.checkout_time, c.actual_checkout_time ) checkout_time,
    r.cust_room_name, r.cust_room_no, a.open_pwd,
    b.rent_type, b.phone, b.remark, b.checkiner_name nameRemark,
    r.city, r.chain_name, r.hotspot_name, r.hotspot_id, b.channel_price,
    c.arrival_time, b.invoice_price
    FROM checkin_infos a
    LEFT JOIN orders b ON a.order_no = b.order_no
    LEFT JOIN checkins c ON a.checkin_id = c.checkin_id
    LEFT JOIN (
    SELECT
    c.checkin_id, GROUP_CONCAT(cn. NAME, '(', cn.phone, ')') NAME
    FROM xbed_business.checkiners cn, xbed_business.checkins c
    WHERE cn.checkin_id = c.checkin_id
    AND cn.type != - 1
    AND cn.normal = 1
    AND cn.checkin_id IN
    <foreach collection="idList" item="item" index="index" open="(" close=")" separator=",">
      #{item}
    </foreach>
    GROUP BY cn.checkin_id
    ) d ON a.checkin_id = d.checkin_id
    LEFT JOIN (
    SELECT
    rm.room_id, rm.cust_room_name, rm.cust_room_no,
    rm.city, rc.chain_name, rc.hotspot_name, rc.hotspot_id
    FROM xbed_base.rooms rm, xbed_base.room_chain rc
    WHERE rm.chain_id = rc.chain_id
    ) r ON c.room_id = r.room_id
    WHERE a.created_at >= #{startDate}
    AND a.created_at &lt; #{endDate}
    ) f
    WHERE 1 = 1
    <if test="orderName != null">AND ( f.orderName like "%"#{orderName}"%" OR f.cname like "%"#{orderName}"%" OR f.nameRemark like "%"#{orderName}"%" )</if>
    <if test="otherNo != null">AND f.other_no like "%"#{otherNo}"%" </if>
    <if test="orderNo != null">AND f.order_no like "%"#{orderNo}"%" </if>
    <if test="phone != null">AND ( f.phone like "%"#{phone}"%" OR f.cname like "%"#{phone}"%" ) </if>
    <if test="roomNo != null">AND f.cust_room_no like "%"#{roomNo}"%" </if>
    <if test="stat != null">AND f.stat = #{stat} </if>
    <if test="source != null">AND f.source = #{source} </if>
    <if test="payStat != null">AND f.pay_stat = #{payStat} </if>
    <if test="checkin != null">AND f.checkin = #{checkin} </if>
    <if test="city != null">AND f.city = #{city} </if>
    <if test="chainName != null">AND f.chain_name = #{chainName} </if>
    <if test="rentType != null">AND f.rent_type = #{rentType} </if>
    <if test="hotspotName != null">AND f.hotspot_name = #{hotspotName} </if>
    <if test="hotspotPowerIds != null">AND f.hotspot_id in
      <foreach collection="hotspotPowerIds" item="item" index="index" open="(" close=")" separator=",">
        #{item}
      </foreach>
    </if>
    <if test="checkInTime != null">AND DateDiff(f.checkin_time, #{checkInTime}) = 0 </if>
    <if test="quitTime != null">AND DateDiff(f.checkout_time, #{quitTime}) = 0 </if>
  </select>
  <select id="listAllOrderListData" parameterType="Map" resultType="Map">
    SELECT * FROM (
    SELECT
    a.order_no, b.other_no, a.checkin_id, a.created_at, r.room_id,
    CONCAT(b. NAME, '(', b.phone, ')') orderName, d. NAME cname,
    a.order_source source, a.pay_stat, a.checkin, a.stat,
    IF ( ISNULL(c.actual_checkin_time) OR a.overstay = 2, a.checkin_time, c.actual_checkin_time ) checkin_time,
    IF ( ISNULL(c.actual_checkout_time) OR a.overstay = 2, a.checkout_time, c.actual_checkout_time ) checkout_time,
    r.cust_room_name, r.cust_room_no, a.open_pwd,
    b.rent_type, b.phone, b.remark, b.checkiner_name nameRemark,
    r.city, r.chain_name, r.hotspot_name, r.hotspot_id, b.channel_commission + b.other_channel_expenses channel_price,
    c.arrival_time, b.invoice_price, a.is_package
    FROM checkin_infos a
    LEFT JOIN orders b ON a.order_no = b.order_no
    LEFT JOIN checkins c ON a.checkin_id = c.checkin_id
    LEFT JOIN (
    SELECT
    c.checkin_id, GROUP_CONCAT(cn. NAME, '(', cn.phone, ')') NAME
    FROM xbed_business.checkiners cn, xbed_business.checkins c
    WHERE cn.checkin_id = c.checkin_id
    AND cn.type != - 1
    AND cn.normal = 1
    AND cn.checkin_id IN
    <foreach collection="idList" item="item" index="index" open="(" close=")" separator=",">
      #{item}
    </foreach>
    GROUP BY cn.checkin_id
    ) d ON a.checkin_id = d.checkin_id
    LEFT JOIN (
    SELECT
    rm.room_id, rm.cust_room_name, rm.cust_room_no,
    rm.city, rc.chain_name, rc.hotspot_name, rc.hotspot_id
    FROM xbed_base.rooms rm, xbed_base.room_chain rc
    WHERE rm.chain_id = rc.chain_id
    ) r ON c.room_id = r.room_id
    WHERE a.created_at >= #{startDate}
    AND a.created_at &lt; #{endDate}
    ) f
    WHERE 1 = 1
    <if test="orderName != null">AND ( f.orderName like "%"#{orderName}"%" OR f.cname like "%"#{orderName}"%" OR f.nameRemark like "%"#{orderName}"%" )</if>
    <if test="otherNo != null">AND f.other_no like "%"#{otherNo}"%" </if>
    <if test="orderNo != null">AND f.order_no like "%"#{orderNo}"%" </if>
    <if test="phone != null">AND ( f.phone like "%"#{phone}"%" OR f.cname like "%"#{phone}"%" ) </if>
    <if test="roomNo != null">AND f.cust_room_no like "%"#{roomNo}"%" </if>
    <if test="stat != null">AND f.stat = #{stat} </if>
    <if test="source != null">AND f.source = #{source} </if>
    <if test="payStat != null">AND f.pay_stat = #{payStat} </if>
    <if test="checkin != null">AND f.checkin = #{checkin} </if>
    <if test="city != null">AND f.city = #{city} </if>
    <if test="chainName != null">AND f.chain_name = #{chainName} </if>
    <if test="rentType != null">AND f.rent_type = #{rentType} </if>
    <if test="hotspotName != null">AND f.hotspot_name = #{hotspotName} </if>
    <if test="hotspotPowerIds != null">AND f.hotspot_id in
      <foreach collection="hotspotPowerIds" item="item" index="index" open="(" close=")" separator=",">
        #{item}
      </foreach>
    </if>
    <if test="checkInTime != null">AND DateDiff(f.checkin_time, #{checkInTime}) = 0 </if>
    <if test="quitTime != null">AND DateDiff(f.checkout_time, #{quitTime}) = 0 </if>
    <if test="sort != null">
      ORDER BY ${sort}
    </if>
    <if test="sort == null">
      ORDER BY f.created_at DESC
    </if>
    LIMIT #{startRow},#{size}
  </select>

  <select id="listCheckinInfoByCID" resultMap="BaseResultMap">
    SELECT * FROM checkin_infos
    WHERE stat = 1
    AND checkin_id in
    <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
      #{item}
    </foreach>
  </select>

  <select id="queryNormalCheckinInfoList" resultMap="BaseResultMap">
    SELECT * FROM xbed_business.checkin_infos WHERE stat = 1 AND pay_stat = 2 AND order_no = #{orderNo}
  </select>

  <select id="queryByCheckinAndCheckinId" resultMap="BaseResultMap">
    SELECT * FROM xbed_business.checkin_infos WHERE stat = 1 AND pay_stat = 2 AND checkin_id = #{checkinId} ORDER BY created_at ASC
  </select>
  <select id="listByCheckinID" resultMap="BaseResultMap">
    SELECT * FROM xbed_business.checkin_infos
    WHERE checkin_id = #{checkinId}
    ORDER BY created_at DESC
  </select>
  <select id="listByOrderNo" resultMap="BaseResultMap">
    SELECT * FROM xbed_business.checkin_infos
    WHERE order_no = #{orderNo}
    ORDER BY created_at DESC
  </select>

  <update id="updateByPrimaryKeyMap" parameterType="Map">
    update xbed_business.checkin_infos
    <set>
      <if test="checkin != null">
        checkin = #{checkin,jdbcType=INTEGER},
      </if>
      <if test="checkinId != null">
        checkin_id = #{checkinId,jdbcType=INTEGER},
      </if>
      <if test="checkinTime != null">
        checkin_time = #{checkinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkoutTime != null">
        checkout_time = #{checkoutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="openPwd != null">
        open_pwd = #{openPwd,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="otaNo != null">
        ota_no = #{otaNo,jdbcType=VARCHAR},
      </if>
      <if test="otaStayId != null">
        ota_stay_id = #{otaStayId,jdbcType=VARCHAR},
      </if>
      <if test="overstay != null">
        overstay = #{overstay,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="stat != null">
        stat = #{stat,jdbcType=INTEGER},
      </if>
      <if test="isCheckined != null">
        is_checkined = #{isCheckined,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="payBatch != null">
        pay_batch = #{payBatch,jdbcType=VARCHAR},
      </if>
      <if test="payStat != null">
        pay_stat = #{payStat,jdbcType=INTEGER},
      </if>
      <if test="payNotify != null">
        pay_notify = #{payNotify,jdbcType=INTEGER},
      </if>
      <if test="orderSource != null">
        order_source = #{orderSource,jdbcType=INTEGER},
      </if>
      <if test="orderSourceName != null">
        order_source_name = #{orderSourceName,jdbcType=VARCHAR},
      </if>
      <if test="settlementId != null">
        settlement_id = #{settlementId,jdbcType=INTEGER},
      </if>
      <if test="payNo != null">
        pay_no = #{payNo,jdbcType=VARCHAR},
      </if>
      <if test="refundId != null">
        refund_id = #{refundId,jdbcType=INTEGER},
      </if>
      <if test="refundNo != null">
        refund_no = #{refundNo,jdbcType=VARCHAR},
      </if>
    </set>
    where checkin_info_id = #{checkinInfoId,jdbcType=INTEGER}
  </update>

  <update id="updateOpenPassWordById">
    UPDATE checkin_infos ci
    SET ci.open_pwd = #{passWord}
    WHERE ci.checkin_info_id = #{checkinInfoId}
  </update>

  <select id="queryNotPaidInfoNumByCheckinIds" resultType="Map">
    SELECT
    checkin_id checkinId,
    COUNT(*) number
    FROM
    xbed_business.checkin_infos
    WHERE
    stat = 1
    AND pay_stat = 1
    AND checkin_id IN
    <foreach close=")" collection="checkinIds" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach>
    GROUP BY
    checkin_id
  </select>

  <select id="queryNotPaidInfoNumByCheckinId" resultType="Integer">
    SELECT
    COUNT(*) number
    FROM
    xbed_business.checkin_infos
    WHERE
    stat = 1
    AND pay_stat = 1
    AND checkin_id = #{checkinId}
  </select>

  <select id="queryOrderSource" resultType="Map">
    SELECT
    order_source orderSource,
    order_source_name orderSourceName
    FROM
    xbed_business.checkin_infos
    WHERE
    checkin_id = #{checkinId}
    AND stat = 1
    ORDER BY
    created_at DESC
    LIMIT 1
  </select>

  <update id="updateStatByCheckinInfoId">
    UPDATE checkin_infos ci
    SET ci.stat = #{stat}
    <if test="endTime != null">
      , end_time = #{endTime}
    </if>
    WHERE ci.checkin_info_id in
    <foreach close=")" collection="idList" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach>
  </update>

  <select id="queryNotPaidPackageInfoNum" resultType="Integer">
    SELECT
    COUNT(*)
    FROM
    xbed_business.checkin_infos
    WHERE
    is_package = 1
    AND stat = 1
    AND pay_stat = 1
    AND order_no = #{orderNo}
  </select>

  <select id="listCheckinInfoByIdList" resultMap="BaseResultMap">
    SELECT * FROM checkin_infos
    WHERE checkin_info_id in
    <foreach collection="idList" item="item" index="index" open="(" close=")" separator=",">
      #{item}
    </foreach>
    ORDER BY created_at DESC
  </select>
</mapper>